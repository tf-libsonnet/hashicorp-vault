local d = (import 'github.com/jsonnet-libs/docsonnet/doc-util/main.libsonnet');
{
  '#':: d.pkg(name='data', url='', help=''),
  ad_access_credentials: (import 'ad_access_credentials.libsonnet'),
  approle_auth_backend_role_id: (import 'approle_auth_backend_role_id.libsonnet'),
  auth_backend: (import 'auth_backend.libsonnet'),
  auth_backends: (import 'auth_backends.libsonnet'),
  aws_access_credentials: (import 'aws_access_credentials.libsonnet'),
  azure_access_credentials: (import 'azure_access_credentials.libsonnet'),
  gcp_auth_backend_role: (import 'gcp_auth_backend_role.libsonnet'),
  generic_secret: (import 'generic_secret.libsonnet'),
  identity_entity: (import 'identity_entity.libsonnet'),
  identity_group: (import 'identity_group.libsonnet'),
  identity_oidc_client_creds: (import 'identity_oidc_client_creds.libsonnet'),
  identity_oidc_openid_config: (import 'identity_oidc_openid_config.libsonnet'),
  identity_oidc_public_keys: (import 'identity_oidc_public_keys.libsonnet'),
  kubernetes_auth_backend_config: (import 'kubernetes_auth_backend_config.libsonnet'),
  kubernetes_auth_backend_role: (import 'kubernetes_auth_backend_role.libsonnet'),
  kubernetes_service_account_token: (import 'kubernetes_service_account_token.libsonnet'),
  kv_secret: (import 'kv_secret.libsonnet'),
  kv_secret_subkeys_v2: (import 'kv_secret_subkeys_v2.libsonnet'),
  kv_secret_v2: (import 'kv_secret_v2.libsonnet'),
  kv_secrets_list: (import 'kv_secrets_list.libsonnet'),
  kv_secrets_list_v2: (import 'kv_secrets_list_v2.libsonnet'),
  ldap_dynamic_credentials: (import 'ldap_dynamic_credentials.libsonnet'),
  ldap_static_credentials: (import 'ldap_static_credentials.libsonnet'),
  nomad_access_token: (import 'nomad_access_token.libsonnet'),
  policy_document: (import 'policy_document.libsonnet'),
  raft_autopilot_state: (import 'raft_autopilot_state.libsonnet'),
  transform_decode: (import 'transform_decode.libsonnet'),
  transform_encode: (import 'transform_encode.libsonnet'),
  transit_decrypt: (import 'transit_decrypt.libsonnet'),
  transit_encrypt: (import 'transit_encrypt.libsonnet'),
}
