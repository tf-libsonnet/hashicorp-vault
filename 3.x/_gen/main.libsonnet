local d = (import 'github.com/jsonnet-libs/docsonnet/doc-util/main.libsonnet');
{
  '#':: d.pkg(name='vault', url='', help='The `vault` package contains functions and utilities for setting up the provider, resources, and data\nsources of the [vault Terraform provider](TODO) using Jsonnet.\n\nThis package is autogenerated from the [tf-libsonnet/libgenerator](https://github.com/tf-libsonnet/libgenerator)\nproject.\n'),
  provider: (import 'provider_vault.libsonnet'),
  ad_secret_backend: (import 'resources/ad_secret_backend.libsonnet'),
  ad_secret_library: (import 'resources/ad_secret_library.libsonnet'),
  ad_secret_role: (import 'resources/ad_secret_role.libsonnet'),
  alicloud_auth_backend_role: (import 'resources/alicloud_auth_backend_role.libsonnet'),
  approle_auth_backend_login: (import 'resources/approle_auth_backend_login.libsonnet'),
  approle_auth_backend_role: (import 'resources/approle_auth_backend_role.libsonnet'),
  approle_auth_backend_role_secret_id: (import 'resources/approle_auth_backend_role_secret_id.libsonnet'),
  audit: (import 'resources/audit.libsonnet'),
  audit_request_header: (import 'resources/audit_request_header.libsonnet'),
  auth_backend: (import 'resources/auth_backend.libsonnet'),
  aws_auth_backend_cert: (import 'resources/aws_auth_backend_cert.libsonnet'),
  aws_auth_backend_client: (import 'resources/aws_auth_backend_client.libsonnet'),
  aws_auth_backend_config_identity: (import 'resources/aws_auth_backend_config_identity.libsonnet'),
  aws_auth_backend_identity_whitelist: (import 'resources/aws_auth_backend_identity_whitelist.libsonnet'),
  aws_auth_backend_login: (import 'resources/aws_auth_backend_login.libsonnet'),
  aws_auth_backend_role: (import 'resources/aws_auth_backend_role.libsonnet'),
  aws_auth_backend_role_tag: (import 'resources/aws_auth_backend_role_tag.libsonnet'),
  aws_auth_backend_roletag_blacklist: (import 'resources/aws_auth_backend_roletag_blacklist.libsonnet'),
  aws_auth_backend_sts_role: (import 'resources/aws_auth_backend_sts_role.libsonnet'),
  aws_secret_backend: (import 'resources/aws_secret_backend.libsonnet'),
  aws_secret_backend_role: (import 'resources/aws_secret_backend_role.libsonnet'),
  aws_secret_backend_static_role: (import 'resources/aws_secret_backend_static_role.libsonnet'),
  azure_auth_backend_config: (import 'resources/azure_auth_backend_config.libsonnet'),
  azure_auth_backend_role: (import 'resources/azure_auth_backend_role.libsonnet'),
  azure_secret_backend: (import 'resources/azure_secret_backend.libsonnet'),
  azure_secret_backend_role: (import 'resources/azure_secret_backend_role.libsonnet'),
  cert_auth_backend_role: (import 'resources/cert_auth_backend_role.libsonnet'),
  consul_secret_backend: (import 'resources/consul_secret_backend.libsonnet'),
  consul_secret_backend_role: (import 'resources/consul_secret_backend_role.libsonnet'),
  database_secret_backend_connection: (import 'resources/database_secret_backend_connection.libsonnet'),
  database_secret_backend_role: (import 'resources/database_secret_backend_role.libsonnet'),
  database_secret_backend_static_role: (import 'resources/database_secret_backend_static_role.libsonnet'),
  database_secrets_mount: (import 'resources/database_secrets_mount.libsonnet'),
  egp_policy: (import 'resources/egp_policy.libsonnet'),
  gcp_auth_backend: (import 'resources/gcp_auth_backend.libsonnet'),
  gcp_auth_backend_role: (import 'resources/gcp_auth_backend_role.libsonnet'),
  gcp_secret_backend: (import 'resources/gcp_secret_backend.libsonnet'),
  gcp_secret_impersonated_account: (import 'resources/gcp_secret_impersonated_account.libsonnet'),
  gcp_secret_roleset: (import 'resources/gcp_secret_roleset.libsonnet'),
  gcp_secret_static_account: (import 'resources/gcp_secret_static_account.libsonnet'),
  generic_endpoint: (import 'resources/generic_endpoint.libsonnet'),
  generic_secret: (import 'resources/generic_secret.libsonnet'),
  github_auth_backend: (import 'resources/github_auth_backend.libsonnet'),
  github_team: (import 'resources/github_team.libsonnet'),
  github_user: (import 'resources/github_user.libsonnet'),
  identity_entity: (import 'resources/identity_entity.libsonnet'),
  identity_entity_alias: (import 'resources/identity_entity_alias.libsonnet'),
  identity_entity_policies: (import 'resources/identity_entity_policies.libsonnet'),
  identity_group: (import 'resources/identity_group.libsonnet'),
  identity_group_alias: (import 'resources/identity_group_alias.libsonnet'),
  identity_group_member_entity_ids: (import 'resources/identity_group_member_entity_ids.libsonnet'),
  identity_group_member_group_ids: (import 'resources/identity_group_member_group_ids.libsonnet'),
  identity_group_policies: (import 'resources/identity_group_policies.libsonnet'),
  identity_mfa_duo: (import 'resources/identity_mfa_duo.libsonnet'),
  identity_mfa_login_enforcement: (import 'resources/identity_mfa_login_enforcement.libsonnet'),
  identity_mfa_okta: (import 'resources/identity_mfa_okta.libsonnet'),
  identity_mfa_pingid: (import 'resources/identity_mfa_pingid.libsonnet'),
  identity_mfa_totp: (import 'resources/identity_mfa_totp.libsonnet'),
  identity_oidc: (import 'resources/identity_oidc.libsonnet'),
  identity_oidc_assignment: (import 'resources/identity_oidc_assignment.libsonnet'),
  identity_oidc_client: (import 'resources/identity_oidc_client.libsonnet'),
  identity_oidc_key: (import 'resources/identity_oidc_key.libsonnet'),
  identity_oidc_key_allowed_client_id: (import 'resources/identity_oidc_key_allowed_client_id.libsonnet'),
  identity_oidc_provider: (import 'resources/identity_oidc_provider.libsonnet'),
  identity_oidc_role: (import 'resources/identity_oidc_role.libsonnet'),
  identity_oidc_scope: (import 'resources/identity_oidc_scope.libsonnet'),
  jwt_auth_backend: (import 'resources/jwt_auth_backend.libsonnet'),
  jwt_auth_backend_role: (import 'resources/jwt_auth_backend_role.libsonnet'),
  kmip_secret_backend: (import 'resources/kmip_secret_backend.libsonnet'),
  kmip_secret_role: (import 'resources/kmip_secret_role.libsonnet'),
  kmip_secret_scope: (import 'resources/kmip_secret_scope.libsonnet'),
  kubernetes_auth_backend_config: (import 'resources/kubernetes_auth_backend_config.libsonnet'),
  kubernetes_auth_backend_role: (import 'resources/kubernetes_auth_backend_role.libsonnet'),
  kubernetes_secret_backend: (import 'resources/kubernetes_secret_backend.libsonnet'),
  kubernetes_secret_backend_role: (import 'resources/kubernetes_secret_backend_role.libsonnet'),
  kv_secret: (import 'resources/kv_secret.libsonnet'),
  kv_secret_backend_v2: (import 'resources/kv_secret_backend_v2.libsonnet'),
  kv_secret_v2: (import 'resources/kv_secret_v2.libsonnet'),
  ldap_auth_backend: (import 'resources/ldap_auth_backend.libsonnet'),
  ldap_auth_backend_group: (import 'resources/ldap_auth_backend_group.libsonnet'),
  ldap_auth_backend_user: (import 'resources/ldap_auth_backend_user.libsonnet'),
  ldap_secret_backend: (import 'resources/ldap_secret_backend.libsonnet'),
  ldap_secret_backend_dynamic_role: (import 'resources/ldap_secret_backend_dynamic_role.libsonnet'),
  ldap_secret_backend_library_set: (import 'resources/ldap_secret_backend_library_set.libsonnet'),
  ldap_secret_backend_static_role: (import 'resources/ldap_secret_backend_static_role.libsonnet'),
  managed_keys: (import 'resources/managed_keys.libsonnet'),
  mfa_duo: (import 'resources/mfa_duo.libsonnet'),
  mfa_okta: (import 'resources/mfa_okta.libsonnet'),
  mfa_pingid: (import 'resources/mfa_pingid.libsonnet'),
  mfa_totp: (import 'resources/mfa_totp.libsonnet'),
  mongodbatlas_secret_backend: (import 'resources/mongodbatlas_secret_backend.libsonnet'),
  mongodbatlas_secret_role: (import 'resources/mongodbatlas_secret_role.libsonnet'),
  mount: (import 'resources/mount.libsonnet'),
  namespace: (import 'resources/namespace.libsonnet'),
  nomad_secret_backend: (import 'resources/nomad_secret_backend.libsonnet'),
  nomad_secret_role: (import 'resources/nomad_secret_role.libsonnet'),
  okta_auth_backend: (import 'resources/okta_auth_backend.libsonnet'),
  okta_auth_backend_group: (import 'resources/okta_auth_backend_group.libsonnet'),
  okta_auth_backend_user: (import 'resources/okta_auth_backend_user.libsonnet'),
  password_policy: (import 'resources/password_policy.libsonnet'),
  pki_secret_backend_cert: (import 'resources/pki_secret_backend_cert.libsonnet'),
  pki_secret_backend_config_ca: (import 'resources/pki_secret_backend_config_ca.libsonnet'),
  pki_secret_backend_config_urls: (import 'resources/pki_secret_backend_config_urls.libsonnet'),
  pki_secret_backend_crl_config: (import 'resources/pki_secret_backend_crl_config.libsonnet'),
  pki_secret_backend_intermediate_cert_request: (import 'resources/pki_secret_backend_intermediate_cert_request.libsonnet'),
  pki_secret_backend_intermediate_set_signed: (import 'resources/pki_secret_backend_intermediate_set_signed.libsonnet'),
  pki_secret_backend_issuer: (import 'resources/pki_secret_backend_issuer.libsonnet'),
  pki_secret_backend_key: (import 'resources/pki_secret_backend_key.libsonnet'),
  pki_secret_backend_role: (import 'resources/pki_secret_backend_role.libsonnet'),
  pki_secret_backend_root_cert: (import 'resources/pki_secret_backend_root_cert.libsonnet'),
  pki_secret_backend_root_sign_intermediate: (import 'resources/pki_secret_backend_root_sign_intermediate.libsonnet'),
  pki_secret_backend_sign: (import 'resources/pki_secret_backend_sign.libsonnet'),
  policy: (import 'resources/policy.libsonnet'),
  quota_lease_count: (import 'resources/quota_lease_count.libsonnet'),
  quota_rate_limit: (import 'resources/quota_rate_limit.libsonnet'),
  rabbitmq_secret_backend: (import 'resources/rabbitmq_secret_backend.libsonnet'),
  rabbitmq_secret_backend_role: (import 'resources/rabbitmq_secret_backend_role.libsonnet'),
  raft_autopilot: (import 'resources/raft_autopilot.libsonnet'),
  raft_snapshot_agent_config: (import 'resources/raft_snapshot_agent_config.libsonnet'),
  rgp_policy: (import 'resources/rgp_policy.libsonnet'),
  ssh_secret_backend_ca: (import 'resources/ssh_secret_backend_ca.libsonnet'),
  ssh_secret_backend_role: (import 'resources/ssh_secret_backend_role.libsonnet'),
  terraform_cloud_secret_backend: (import 'resources/terraform_cloud_secret_backend.libsonnet'),
  terraform_cloud_secret_creds: (import 'resources/terraform_cloud_secret_creds.libsonnet'),
  terraform_cloud_secret_role: (import 'resources/terraform_cloud_secret_role.libsonnet'),
  token: (import 'resources/token.libsonnet'),
  token_auth_backend_role: (import 'resources/token_auth_backend_role.libsonnet'),
  transform_alphabet: (import 'resources/transform_alphabet.libsonnet'),
  transform_role: (import 'resources/transform_role.libsonnet'),
  transform_template: (import 'resources/transform_template.libsonnet'),
  transform_transformation: (import 'resources/transform_transformation.libsonnet'),
  transit_secret_backend_key: (import 'resources/transit_secret_backend_key.libsonnet'),
  transit_secret_cache_config: (import 'resources/transit_secret_cache_config.libsonnet'),
  data: (import 'data/main.libsonnet'),
}
